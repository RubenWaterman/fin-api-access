# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule FinAPIAccess.Api.ClientConfiguration do
  @moduledoc """
  API calls for all endpoints tagged `ClientConfiguration`.
  """

  alias FinAPIAccess.Connection
  import FinAPIAccess.RequestBuilder


  @doc """
  Edit client configuration
  Edit your client's configuration. Must pass your global (i.e. client) access_token.<br/><br/> <b>NOTE</b>: When token validity periods are changed, this only applies to newly requested tokens, and does not change the expiration time of already existing tokens.

  ## Parameters

  - connection (FinAPIAccess.Connection): Connection to server
  - client_configuration_params (ClientConfigurationParams): Client configuration parameters
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %FinAPIAccess.Model.ClientConfiguration{}} on success
  {:error, info} on failure
  """
  @spec edit_client_configuration(Tesla.Env.client, FinAPIAccess.Model.ClientConfigurationParams.t, keyword()) :: {:ok, FinAPIAccess.Model.ClientConfiguration.t} | {:ok, FinAPIAccess.Model.ErrorMessage.t} | {:ok, FinAPIAccess.Model.BadCredentialsError.t} | {:error, Tesla.Env.t}
  def edit_client_configuration(connection, client_configuration_params, _opts \\ []) do
    %{}
    |> method(:patch)
    |> url("/api/v1/clientConfiguration")
    |> add_param(:body, :body, client_configuration_params)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %FinAPIAccess.Model.ClientConfiguration{}},
      { 400, %FinAPIAccess.Model.ErrorMessage{}},
      { 401, %FinAPIAccess.Model.BadCredentialsError{}},
      { 403, %FinAPIAccess.Model.ErrorMessage{}},
      { 500, %FinAPIAccess.Model.ErrorMessage{}}
    ])
  end

  @doc """
  Get client configuration
  Get your client's configuration. Must pass your global (i.e. client) access_token.

  ## Parameters

  - connection (FinAPIAccess.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %FinAPIAccess.Model.ClientConfiguration{}} on success
  {:error, info} on failure
  """
  @spec get_client_configuration(Tesla.Env.client, keyword()) :: {:ok, FinAPIAccess.Model.ClientConfiguration.t} | {:ok, FinAPIAccess.Model.ErrorMessage.t} | {:ok, FinAPIAccess.Model.BadCredentialsError.t} | {:error, Tesla.Env.t}
  def get_client_configuration(connection, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/api/v1/clientConfiguration")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %FinAPIAccess.Model.ClientConfiguration{}},
      { 400, %FinAPIAccess.Model.ErrorMessage{}},
      { 401, %FinAPIAccess.Model.BadCredentialsError{}},
      { 403, %FinAPIAccess.Model.ErrorMessage{}},
      { 500, %FinAPIAccess.Model.ErrorMessage{}}
    ])
  end
end
