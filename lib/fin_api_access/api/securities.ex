# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule FinAPIAccess.Api.Securities do
  @moduledoc """
  API calls for all endpoints tagged `Securities`.
  """

  alias FinAPIAccess.Connection
  import FinAPIAccess.RequestBuilder


  @doc """
  Get and search all securities
  Get securities of the user that is authorized by the access_token. Must pass the user's access_token. You can set optional search criteria to get only those securities that you are interested in. If you do not specify any search criteria, then this service functions as a 'get all' service.<p>Note: Whenever a security account is being updated, its security positions will be internally re-created, meaning that the identifier of a security position might change over time.</p>

  ## Parameters

  - connection (FinAPIAccess.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :ids ([integer()]): A comma-separated list of security identifiers. If specified, then only securities whose identifier match any of the given identifiers will be regarded. The maximum number of identifiers is 1000.
    - :search (String.t): If specified, then only those securities will be contained in the result whose 'name', 'isin' or 'wkn' contains the given search string (the matching works case-insensitive). If no securities contain the search string in any of these fields, then the result will be an empty list. NOTE: If the given search string consists of several terms (separated by whitespace), then ALL of these terms must be contained in the searched fields in order for a security to get included into the result.
    - :account_ids ([integer()]): Comma-separated list of identifiers of accounts
    - :page (integer()): Result page that you want to retrieve.
    - :per_page (integer()): Maximum number of records per page. By default it's 20. Can be at most 500.
    - :order ([String.t]): Determines the order of the results. You can order the results by next fields: 'id', 'name', 'isin', 'wkn', 'quote', 'quantityNominal', 'marketValue' and 'entryQuote'. The default order for all services is 'id,asc'. You can also order by multiple properties. In that case the order of the parameters passed is important. The general format is: 'property[,asc|desc]', with 'asc' being the default value.
  ## Returns

  {:ok, %FinAPIAccess.Model.PageableSecurityList{}} on success
  {:error, info} on failure
  """
  @spec get_and_search_all_securities(Tesla.Env.client, keyword()) :: {:ok, FinAPIAccess.Model.PageableSecurityList.t} | {:ok, FinAPIAccess.Model.ErrorMessage.t} | {:ok, FinAPIAccess.Model.BadCredentialsError.t} | {:error, Tesla.Env.t}
  def get_and_search_all_securities(connection, opts \\ []) do
    optional_params = %{
      :"ids" => :query,
      :"search" => :query,
      :"accountIds" => :query,
      :"page" => :query,
      :"perPage" => :query,
      :"order" => :query
    }
    %{}
    |> method(:get)
    |> url("/api/v1/securities")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %FinAPIAccess.Model.PageableSecurityList{}},
      { 400, %FinAPIAccess.Model.ErrorMessage{}},
      { 401, %FinAPIAccess.Model.BadCredentialsError{}},
      { 403, %FinAPIAccess.Model.ErrorMessage{}},
      { 500, %FinAPIAccess.Model.ErrorMessage{}}
    ])
  end

  @doc """
  Get a security
  Get a single security for a specific user. Must pass the security's identifier and the user's access_token. <p>Note: Whenever a security account is being updated, its security positions will be internally re-created, meaning that the identifier of a security position might change over time.</p>

  ## Parameters

  - connection (FinAPIAccess.Connection): Connection to server
  - id (integer()): Security identifier
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, %FinAPIAccess.Model.Security{}} on success
  {:error, info} on failure
  """
  @spec get_security(Tesla.Env.client, integer(), keyword()) :: {:ok, FinAPIAccess.Model.ErrorMessage.t} | {:ok, FinAPIAccess.Model.Security.t} | {:ok, FinAPIAccess.Model.BadCredentialsError.t} | {:error, Tesla.Env.t}
  def get_security(connection, id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/api/v1/securities/#{id}")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %FinAPIAccess.Model.Security{}},
      { 400, %FinAPIAccess.Model.ErrorMessage{}},
      { 401, %FinAPIAccess.Model.BadCredentialsError{}},
      { 403, %FinAPIAccess.Model.ErrorMessage{}},
      { 404, %FinAPIAccess.Model.ErrorMessage{}},
      { 500, %FinAPIAccess.Model.ErrorMessage{}}
    ])
  end
end
