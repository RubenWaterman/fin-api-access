# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule FinAPIAccess.Api.TPPCredentials do
  @moduledoc """
  API calls for all endpoints tagged `TPPCredentials`.
  """

  alias FinAPIAccess.Connection
  import FinAPIAccess.RequestBuilder


  @doc """
  Create new TPP credentials
  Upload TPP credentials for a TPP Authentication Group. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39; target&#x3D;&#39;_blank&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token.

  ## Parameters

  - connection (FinAPIAccess.Connection): Connection to server
  - body (TppCredentialsParams): Parameters of a new set of TPP credentials
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %FinAPIAccess.Model.TppCredentials{}} on success
  {:error, info} on failure
  """
  @spec create_tpp_credential(Tesla.Env.client, FinAPIAccess.Model.TppCredentialsParams.t, keyword()) :: {:ok, FinAPIAccess.Model.TppCredentials.t} | {:error, Tesla.Env.t}
  def create_tpp_credential(connection, body, _opts \\ []) do
    %{}
    |> method(:post)
    |> url("/api/v1/tppCredentials")
    |> add_param(:body, :"body", body)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%FinAPIAccess.Model.TppCredentials{})
  end

  @doc """
  Delete a set of TPP credentials
  Delete a single set of TPP credentials by its id. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39; target&#x3D;&#39;_blank&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token.

  ## Parameters

  - connection (FinAPIAccess.Connection): Connection to server
  - id (integer()): Id of the TPP credentials to delete
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec delete_tpp_credential(Tesla.Env.client, integer(), keyword()) :: {:ok, nil} | {:error, Tesla.Env.t}
  def delete_tpp_credential(connection, id, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/api/v1/tppCredentials/#{id}")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Edit a set of TPP credentials
  Edit TPP credentials data. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39; target&#x3D;&#39;_blank&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token.

  ## Parameters

  - connection (FinAPIAccess.Connection): Connection to server
  - id (integer()): Id of the TPP credentials to edit
  - body (EditTppCredentialParams): New TPP credentials parameters
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %FinAPIAccess.Model.TppCredentials{}} on success
  {:error, info} on failure
  """
  @spec edit_tpp_credential(Tesla.Env.client, integer(), FinAPIAccess.Model.EditTppCredentialParams.t, keyword()) :: {:ok, FinAPIAccess.Model.TppCredentials.t} | {:error, Tesla.Env.t}
  def edit_tpp_credential(connection, id, body, _opts \\ []) do
    %{}
    |> method(:patch)
    |> url("/api/v1/tppCredentials/#{id}")
    |> add_param(:body, :"body", body)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%FinAPIAccess.Model.TppCredentials{})
  end

  @doc """
  Get all TPP credentials
  Get and search all TPP credentials. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39; target&#x3D;&#39;_blank&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token. You can set optional search criteria to get only those TPP credentials that you are interested in. If you do not specify any search criteria, then this service functions as a &#39;get all&#39; service.

  ## Parameters

  - connection (FinAPIAccess.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :search (String.t): Returns only the TPP credentials belonging to those banks whose &#39;name&#39;, &#39;blz&#39;, or &#39;bic&#39; contains the given search string (the matching works case-insensitive). Note: If the given search string consists of several terms (separated by whitespace), then ALL of these terms must apply to a bank in order for it to get included into the result.
    - :page (integer()): Result page that you want to retrieve
    - :per_page (integer()): Maximum number of records per page. By default it&#39;s 20. Can be at most 500. NOTE: Due to its validation and visualization, the swagger frontend might show very low performance, or even crashes, when a service responds with a lot of data. It is recommended to use a HTTP client like Postman or DHC instead of our swagger frontend for service calls with large page sizes.

  ## Returns

  {:ok, %FinAPIAccess.Model.PageableTppCredentialResources{}} on success
  {:error, info} on failure
  """
  @spec get_all_tpp_credentials(Tesla.Env.client, keyword()) :: {:ok, FinAPIAccess.Model.PageableTppCredentialResources.t} | {:error, Tesla.Env.t}
  def get_all_tpp_credentials(connection, opts \\ []) do
    optional_params = %{
      :"search" => :query,
      :"page" => :query,
      :"perPage" => :query
    }
    %{}
    |> method(:get)
    |> url("/api/v1/tppCredentials")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%FinAPIAccess.Model.PageableTppCredentialResources{})
  end

  @doc """
  Get all TPP Authentication Groups
  Get and search across all available TPP authentication groups. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39; target&#x3D;&#39;_blank&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token. You can set optional search criteria to get only those TPP authentication groups that you are interested in. If you do not specify any search criteria, then this service functions as a &#39;get all&#39; service.

  ## Parameters

  - connection (FinAPIAccess.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :ids ([integer()]): A comma-separated list of TPP authentication group identifiers. If specified, then only TPP authentication groups whose identifier match any of the given identifiers will be regarded. The maximum number of identifiers is 1000.
    - :name (String.t): Only the tpp authentication groups with name matching the given one should appear in the result list
    - :bank_blz (String.t): Search by connected banks: only the banks with BLZ matching the given one should appear in the result list
    - :bank_name (String.t): Search by connected banks: only the banks with name matching the given one should appear in the result list
    - :page (integer()): Result page that you want to retrieve
    - :per_page (integer()): Maximum number of records per page. By default it&#39;s 20. Can be at most 500. NOTE: Due to its validation and visualization, the swagger frontend might show very low performance, or even crashes, when a service responds with a lot of data. It is recommended to use a HTTP client like Postman or DHC instead of our swagger frontend for service calls with large page sizes.

  ## Returns

  {:ok, %FinAPIAccess.Model.PageableTppAuthenticationGroupResources{}} on success
  {:error, info} on failure
  """
  @spec get_and_search_tpp_authentication_groups(Tesla.Env.client, keyword()) :: {:ok, FinAPIAccess.Model.PageableTppAuthenticationGroupResources.t} | {:error, Tesla.Env.t}
  def get_and_search_tpp_authentication_groups(connection, opts \\ []) do
    optional_params = %{
      :"ids" => :query,
      :"name" => :query,
      :"bankBlz" => :query,
      :"bankName" => :query,
      :"page" => :query,
      :"perPage" => :query
    }
    %{}
    |> method(:get)
    |> url("/api/v1/tppCredentials/tppAuthenticationGroups")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%FinAPIAccess.Model.PageableTppAuthenticationGroupResources{})
  end

  @doc """
  Get a set of TPP credentials
  Get a single set of TPP credentials by its id. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39; target&#x3D;&#39;_blank&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token.

  ## Parameters

  - connection (FinAPIAccess.Connection): Connection to server
  - id (integer()): Id of the requested TPP credentials
  - opts (KeywordList): [optional] Optional parameters

  ## Returns

  {:ok, %FinAPIAccess.Model.TppCredentials{}} on success
  {:error, info} on failure
  """
  @spec get_tpp_credential(Tesla.Env.client, integer(), keyword()) :: {:ok, FinAPIAccess.Model.TppCredentials.t} | {:error, Tesla.Env.t}
  def get_tpp_credential(connection, id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/api/v1/tppCredentials/#{id}")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%FinAPIAccess.Model.TppCredentials{})
  end
end
